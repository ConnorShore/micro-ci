// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: pkg/rpc/micro-ci.proto

package micro_ci

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Step struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Condition       string                 `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	Variables       map[string]string      `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ContinueOnError bool                   `protobuf:"varint,4,opt,name=continue_on_error,json=continueOnError,proto3" json:"continue_on_error,omitempty"`
	Script          string                 `protobuf:"bytes,5,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Step) Reset() {
	*x = Step{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{0}
}

func (x *Step) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Step) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *Step) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Step) GetContinueOnError() bool {
	if x != nil {
		return x.ContinueOnError
	}
	return false
}

func (x *Step) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type Job struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	RunId string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to JobType:
	//
	//	*Job_PipelineJob_
	//	*Job_BootstrapJob_
	JobType       isJob_JobType `protobuf_oneof:"job_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetJobType() isJob_JobType {
	if x != nil {
		return x.JobType
	}
	return nil
}

func (x *Job) GetPipelineJob() *Job_PipelineJob {
	if x != nil {
		if x, ok := x.JobType.(*Job_PipelineJob_); ok {
			return x.PipelineJob
		}
	}
	return nil
}

func (x *Job) GetBootstrapJob() *Job_BootstrapJob {
	if x != nil {
		if x, ok := x.JobType.(*Job_BootstrapJob_); ok {
			return x.BootstrapJob
		}
	}
	return nil
}

type isJob_JobType interface {
	isJob_JobType()
}

type Job_PipelineJob_ struct {
	PipelineJob *Job_PipelineJob `protobuf:"bytes,3,opt,name=pipeline_job,json=pipelineJob,proto3,oneof"`
}

type Job_BootstrapJob_ struct {
	BootstrapJob *Job_BootstrapJob `protobuf:"bytes,4,opt,name=bootstrap_job,json=bootstrapJob,proto3,oneof"`
}

func (*Job_PipelineJob_) isJob_JobType() {}

func (*Job_BootstrapJob_) isJob_JobType() {}

// Message definitions
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineId     string                 `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UnregisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineId     string                 `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterRequest) Reset() {
	*x = UnregisterRequest{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRequest) ProtoMessage() {}

func (x *UnregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterRequest.ProtoReflect.Descriptor instead.
func (*UnregisterRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{4}
}

func (x *UnregisterRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type UnregisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterResponse) Reset() {
	*x = UnregisterResponse{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterResponse) ProtoMessage() {}

func (x *UnregisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterResponse.ProtoReflect.Descriptor instead.
func (*UnregisterResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{5}
}

func (x *UnregisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FetchJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineId     string                 `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchJobRequest) Reset() {
	*x = FetchJobRequest{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchJobRequest) ProtoMessage() {}

func (x *FetchJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchJobRequest.ProtoReflect.Descriptor instead.
func (*FetchJobRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{6}
}

func (x *FetchJobRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type FetchJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchJobResponse) Reset() {
	*x = FetchJobResponse{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchJobResponse) ProtoMessage() {}

func (x *FetchJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchJobResponse.ProtoReflect.Descriptor instead.
func (*FetchJobResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{7}
}

func (x *FetchJobResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type AddJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddJobResponse) Reset() {
	*x = AddJobResponse{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJobResponse) ProtoMessage() {}

func (x *AddJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJobResponse.ProtoReflect.Descriptor instead.
func (*AddJobResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{8}
}

func (x *AddJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateJobStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobRunId      string                 `protobuf:"bytes,1,opt,name=job_run_id,json=jobRunId,proto3" json:"job_run_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobStatusRequest) Reset() {
	*x = UpdateJobStatusRequest{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobStatusRequest) ProtoMessage() {}

func (x *UpdateJobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateJobStatusRequest) GetJobRunId() string {
	if x != nil {
		return x.JobRunId
	}
	return ""
}

func (x *UpdateJobStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateJobStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobStatusResponse) Reset() {
	*x = UpdateJobStatusResponse{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobStatusResponse) ProtoMessage() {}

func (x *UpdateJobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateJobStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateJobStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type StreamLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobRunId      string                 `protobuf:"bytes,1,opt,name=job_run_id,json=jobRunId,proto3" json:"job_run_id,omitempty"`
	LogData       string                 `protobuf:"bytes,2,opt,name=log_data,json=logData,proto3" json:"log_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsRequest) Reset() {
	*x = StreamLogsRequest{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsRequest) ProtoMessage() {}

func (x *StreamLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsRequest.ProtoReflect.Descriptor instead.
func (*StreamLogsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{11}
}

func (x *StreamLogsRequest) GetJobRunId() string {
	if x != nil {
		return x.JobRunId
	}
	return ""
}

func (x *StreamLogsRequest) GetLogData() string {
	if x != nil {
		return x.LogData
	}
	return ""
}

type StreamLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLogsResponse) Reset() {
	*x = StreamLogsResponse{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLogsResponse) ProtoMessage() {}

func (x *StreamLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLogsResponse.ProtoReflect.Descriptor instead.
func (*StreamLogsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{12}
}

func (x *StreamLogsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Job_PipelineJob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Condition     string                 `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	Variables     map[string]string      `protobuf:"bytes,4,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Image         string                 `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	Steps         []*Step                `protobuf:"bytes,6,rep,name=steps,proto3" json:"steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job_PipelineJob) Reset() {
	*x = Job_PipelineJob{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job_PipelineJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job_PipelineJob) ProtoMessage() {}

func (x *Job_PipelineJob) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job_PipelineJob.ProtoReflect.Descriptor instead.
func (*Job_PipelineJob) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Job_PipelineJob) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *Job_PipelineJob) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *Job_PipelineJob) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Job_PipelineJob) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

type Job_BootstrapJob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepoUrl       string                 `protobuf:"bytes,7,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	CommitSha     string                 `protobuf:"bytes,8,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	Branch        string                 `protobuf:"bytes,9,opt,name=branch,proto3" json:"branch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job_BootstrapJob) Reset() {
	*x = Job_BootstrapJob{}
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job_BootstrapJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job_BootstrapJob) ProtoMessage() {}

func (x *Job_BootstrapJob) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_micro_ci_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job_BootstrapJob.ProtoReflect.Descriptor instead.
func (*Job_BootstrapJob) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_micro_ci_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Job_BootstrapJob) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *Job_BootstrapJob) GetCommitSha() string {
	if x != nil {
		return x.CommitSha
	}
	return ""
}

func (x *Job_BootstrapJob) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

var File_pkg_rpc_micro_ci_proto protoreflect.FileDescriptor

const file_pkg_rpc_micro_ci_proto_rawDesc = "" +
	"\n" +
	"\x16pkg/rpc/micro-ci.proto\x12\bmicro_ci\"\xf7\x01\n" +
	"\x04Step\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tcondition\x18\x02 \x01(\tR\tcondition\x12;\n" +
	"\tvariables\x18\x03 \x03(\v2\x1d.micro_ci.Step.VariablesEntryR\tvariables\x12*\n" +
	"\x11continue_on_error\x18\x04 \x01(\bR\x0fcontinueOnError\x12\x16\n" +
	"\x06script\x18\x05 \x01(\tR\x06script\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x91\x04\n" +
	"\x03Job\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12>\n" +
	"\fpipeline_job\x18\x03 \x01(\v2\x19.micro_ci.Job.PipelineJobH\x00R\vpipelineJob\x12A\n" +
	"\rbootstrap_job\x18\x04 \x01(\v2\x1a.micro_ci.Job.BootstrapJobH\x00R\fbootstrapJob\x1a\xed\x01\n" +
	"\vPipelineJob\x12\x1c\n" +
	"\tcondition\x18\x03 \x01(\tR\tcondition\x12F\n" +
	"\tvariables\x18\x04 \x03(\v2(.micro_ci.Job.PipelineJob.VariablesEntryR\tvariables\x12\x14\n" +
	"\x05image\x18\x05 \x01(\tR\x05image\x12$\n" +
	"\x05steps\x18\x06 \x03(\v2\x0e.micro_ci.StepR\x05steps\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a`\n" +
	"\fBootstrapJob\x12\x19\n" +
	"\brepo_url\x18\a \x01(\tR\arepoUrl\x12\x1d\n" +
	"\n" +
	"commit_sha\x18\b \x01(\tR\tcommitSha\x12\x16\n" +
	"\x06branch\x18\t \x01(\tR\x06branchB\n" +
	"\n" +
	"\bjob_type\"0\n" +
	"\x0fRegisterRequest\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x01 \x01(\tR\tmachineId\",\n" +
	"\x10RegisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"2\n" +
	"\x11UnregisterRequest\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x01 \x01(\tR\tmachineId\".\n" +
	"\x12UnregisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"0\n" +
	"\x0fFetchJobRequest\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x01 \x01(\tR\tmachineId\"3\n" +
	"\x10FetchJobResponse\x12\x1f\n" +
	"\x03job\x18\x01 \x01(\v2\r.micro_ci.JobR\x03job\"*\n" +
	"\x0eAddJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"N\n" +
	"\x16UpdateJobStatusRequest\x12\x1c\n" +
	"\n" +
	"job_run_id\x18\x01 \x01(\tR\bjobRunId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"3\n" +
	"\x17UpdateJobStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"L\n" +
	"\x11StreamLogsRequest\x12\x1c\n" +
	"\n" +
	"job_run_id\x18\x01 \x01(\tR\bjobRunId\x12\x19\n" +
	"\blog_data\x18\x02 \x01(\tR\alogData\".\n" +
	"\x12StreamLogsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xac\x03\n" +
	"\aMicroCI\x12A\n" +
	"\bRegister\x12\x19.micro_ci.RegisterRequest\x1a\x1a.micro_ci.RegisterResponse\x12G\n" +
	"\n" +
	"Unregister\x12\x1b.micro_ci.UnregisterRequest\x1a\x1c.micro_ci.UnregisterResponse\x12A\n" +
	"\bFetchJob\x12\x19.micro_ci.FetchJobRequest\x1a\x1a.micro_ci.FetchJobResponse\x121\n" +
	"\x06AddJob\x12\r.micro_ci.Job\x1a\x18.micro_ci.AddJobResponse\x12V\n" +
	"\x0fUpdateJobStatus\x12 .micro_ci.UpdateJobStatusRequest\x1a!.micro_ci.UpdateJobStatusResponse\x12G\n" +
	"\n" +
	"StreamLogs\x12\x1b.micro_ci.StreamLogsRequest\x1a\x1c.micro_ci.StreamLogsResponseB\x12Z\x10pkg/rpc/micro_cib\x06proto3"

var (
	file_pkg_rpc_micro_ci_proto_rawDescOnce sync.Once
	file_pkg_rpc_micro_ci_proto_rawDescData []byte
)

func file_pkg_rpc_micro_ci_proto_rawDescGZIP() []byte {
	file_pkg_rpc_micro_ci_proto_rawDescOnce.Do(func() {
		file_pkg_rpc_micro_ci_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_rpc_micro_ci_proto_rawDesc), len(file_pkg_rpc_micro_ci_proto_rawDesc)))
	})
	return file_pkg_rpc_micro_ci_proto_rawDescData
}

var file_pkg_rpc_micro_ci_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pkg_rpc_micro_ci_proto_goTypes = []any{
	(*Step)(nil),                    // 0: micro_ci.Step
	(*Job)(nil),                     // 1: micro_ci.Job
	(*RegisterRequest)(nil),         // 2: micro_ci.RegisterRequest
	(*RegisterResponse)(nil),        // 3: micro_ci.RegisterResponse
	(*UnregisterRequest)(nil),       // 4: micro_ci.UnregisterRequest
	(*UnregisterResponse)(nil),      // 5: micro_ci.UnregisterResponse
	(*FetchJobRequest)(nil),         // 6: micro_ci.FetchJobRequest
	(*FetchJobResponse)(nil),        // 7: micro_ci.FetchJobResponse
	(*AddJobResponse)(nil),          // 8: micro_ci.AddJobResponse
	(*UpdateJobStatusRequest)(nil),  // 9: micro_ci.UpdateJobStatusRequest
	(*UpdateJobStatusResponse)(nil), // 10: micro_ci.UpdateJobStatusResponse
	(*StreamLogsRequest)(nil),       // 11: micro_ci.StreamLogsRequest
	(*StreamLogsResponse)(nil),      // 12: micro_ci.StreamLogsResponse
	nil,                             // 13: micro_ci.Step.VariablesEntry
	(*Job_PipelineJob)(nil),         // 14: micro_ci.Job.PipelineJob
	(*Job_BootstrapJob)(nil),        // 15: micro_ci.Job.BootstrapJob
	nil,                             // 16: micro_ci.Job.PipelineJob.VariablesEntry
}
var file_pkg_rpc_micro_ci_proto_depIdxs = []int32{
	13, // 0: micro_ci.Step.variables:type_name -> micro_ci.Step.VariablesEntry
	14, // 1: micro_ci.Job.pipeline_job:type_name -> micro_ci.Job.PipelineJob
	15, // 2: micro_ci.Job.bootstrap_job:type_name -> micro_ci.Job.BootstrapJob
	1,  // 3: micro_ci.FetchJobResponse.job:type_name -> micro_ci.Job
	16, // 4: micro_ci.Job.PipelineJob.variables:type_name -> micro_ci.Job.PipelineJob.VariablesEntry
	0,  // 5: micro_ci.Job.PipelineJob.steps:type_name -> micro_ci.Step
	2,  // 6: micro_ci.MicroCI.Register:input_type -> micro_ci.RegisterRequest
	4,  // 7: micro_ci.MicroCI.Unregister:input_type -> micro_ci.UnregisterRequest
	6,  // 8: micro_ci.MicroCI.FetchJob:input_type -> micro_ci.FetchJobRequest
	1,  // 9: micro_ci.MicroCI.AddJob:input_type -> micro_ci.Job
	9,  // 10: micro_ci.MicroCI.UpdateJobStatus:input_type -> micro_ci.UpdateJobStatusRequest
	11, // 11: micro_ci.MicroCI.StreamLogs:input_type -> micro_ci.StreamLogsRequest
	3,  // 12: micro_ci.MicroCI.Register:output_type -> micro_ci.RegisterResponse
	5,  // 13: micro_ci.MicroCI.Unregister:output_type -> micro_ci.UnregisterResponse
	7,  // 14: micro_ci.MicroCI.FetchJob:output_type -> micro_ci.FetchJobResponse
	8,  // 15: micro_ci.MicroCI.AddJob:output_type -> micro_ci.AddJobResponse
	10, // 16: micro_ci.MicroCI.UpdateJobStatus:output_type -> micro_ci.UpdateJobStatusResponse
	12, // 17: micro_ci.MicroCI.StreamLogs:output_type -> micro_ci.StreamLogsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_rpc_micro_ci_proto_init() }
func file_pkg_rpc_micro_ci_proto_init() {
	if File_pkg_rpc_micro_ci_proto != nil {
		return
	}
	file_pkg_rpc_micro_ci_proto_msgTypes[1].OneofWrappers = []any{
		(*Job_PipelineJob_)(nil),
		(*Job_BootstrapJob_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_rpc_micro_ci_proto_rawDesc), len(file_pkg_rpc_micro_ci_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_rpc_micro_ci_proto_goTypes,
		DependencyIndexes: file_pkg_rpc_micro_ci_proto_depIdxs,
		MessageInfos:      file_pkg_rpc_micro_ci_proto_msgTypes,
	}.Build()
	File_pkg_rpc_micro_ci_proto = out.File
	file_pkg_rpc_micro_ci_proto_goTypes = nil
	file_pkg_rpc_micro_ci_proto_depIdxs = nil
}
